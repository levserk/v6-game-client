/*! v6-game-client 2014-12-18 16:11 */
define("modules/game_manager",["EE"],function(a){function b(a,b){if(this.data=a,this.id=a.id,this.owner=b.getUser(a.owner),this.players=[],"object"==typeof a.players[0])this.players=a.players;else for(var c=0;c<a.players.length;c++)this.players.push(b.getUser(a.players[c]))}var c=function(a){this.client=a,this.currentRoom=null};return c.prototype=new a,c.prototype.onMessage=function(a){var b,c=a.data,d=this.client.getPlayer();switch(console.log("game_manager;","message",a),a.type){case"new_game":for(b=0;b<c.players.length;b++)if(c.players[b]==d||c.players[b]==d.userId){if(this.currentRoom){if(!this.currentRoom.isClosed)throw new Error("start game before current game finished! old: "+this.currentRoom.id+" new:"+c.room);this.leaveRoom()}this.onGameStart(c)}break;case"end_game":break;case"ready":console.log("game_manager;","user_ready",c);break;case"round_start":console.log("game_manager;","emit round_start",c),this.emit("round_start",{players:[this.getPlayer(c.players[0]),this.getPlayer(c.players[1])],first:this.getPlayer(c.first),id:c.id});break;case"turn":console.log("game_manager;","emit turn",c),this.emit("turn",c);break;case"event":console.log("game_manager;","game event",c);break;case"user_leave":var e=this.getPlayer(c);this.onUserLeave(e);break;case"round_end":console.log("game_manager","emit round_end",c),c.winner?c.winner==this.client.getPlayer().userId?(console.log("game_manager;","win",c),c.result="win"):(console.log("game_manager;","lose",c),c.result="lose"):"not_save"==c.winner?console.log("game_manager","not accepted",c):(c.result="draw",console.log("game_manager;","draw",c)),this.emit("round_end",c,this.client.getPlayer());break;case"error":console.log("game_manager;","error",c)}},c.prototype.onGameStart=function(a){a=new b(a,this.client),console.log("game_manager;","emit game_start",a),this.currentRoom=a,this.emit("game_start",a),this.sendReady()},c.prototype.onUserLeave=function(a){this.currentRoom.isClosed=!0,console.log("game_manager;","user_leave",this.currentRoom,a),a!=this.client.getPlayer()?this.emit("user_leave",a):this.leaveRoom()},c.prototype.leaveGame=function(){this.client.send("game_manager","leave","server",!0)},c.prototype.leaveRoom=function(){if(!this.currentRoom.isClosed)throw new Error("leave not closed room! "+this.currentRoom.id);console.log("game_manager;","emit game_leave;",this.currentRoom),this.emit("game_leave",this.currentRoom),this.currentRoom=null},c.prototype.sendReady=function(){this.client.send("game_manager","ready","server",!0)},c.prototype.sendTurn=function(a){this.client.send("game_manager","turn","server",a)},c.prototype.sendThrow=function(){this.client.send("game_manager","event","server","throw")},c.prototype.getPlayer=function(a){if(this.currentRoom)for(var b=0;b<this.currentRoom.players.length;b++)if(this.currentRoom.players[b].userId==a)return this.currentRoom.players[b];return null},c}),define("modules/invite_manager",["EE"],function(a){var b=function(a){var b=this;this.client=a,this.invites={},this.invite=null,a.userList.on("leave_user",function(a){b.invite&&b.invite.target==a.userId&&(b.invite=null),b.removeInvite(a.userId)}),a.gameManager.on("game_start",function(){b.invite=null,b.rejectAll()})};return b.prototype=new a,b.prototype.onMessage=function(a){switch(console.log("invite_manager;","message",a),a.type){case"invite":this.onInvite(a.data);break;case"reject":this.onReject(a.data.target,a.data.from,"rejected");break;case"cancel":this.onCancel(a.data)}},b.prototype.onInvite=function(a){this.invites[a.from]=a,this.emit("new_invite",{from:this.client.getUser(a.from)})},b.prototype.onReject=function(a,b,c){this.invite.target==a&&this.client.getPlayer().userId==b?(this.emit("reject_invite",{user:this.client.userList.getUser(a),reason:c}),this.invite=null):console.warn("invite_manager; ","wrong user reject invite",a,b)},b.prototype.onCancel=function(a){this.invites[a.from]&&(this.emit("cancel_invite",this.invites[a.from]),this.removeInvite(a.from))},b.prototype.sendInvite=function(a,b){return a?(this.invite&&this.cancel(),b=b||{},b.target=a,this.invite=b,void this.client.send("invite_manager","invite",a,this.invite)):void console.warn("invite_manager; ","wrong userId to send invite",a)},b.prototype.accept=function(a){if(this.invites[a]){var b=this.invites[a];delete this.invites[a],this.cancel(),this.rejectAll(),this.client.send("invite_manager","accept",a,b)}},b.prototype.reject=function(a){this.invites[a]&&(this.client.send("invite_manager","reject",a,this.invites[a]),this.removeInvite(a))},b.prototype.rejectAll=function(){for(var a in this.invites)this.invites.hasOwnProperty(a)&&(this.client.send("invite_manager","reject",a,this.invites[a]),this.removeInvite(a))},b.prototype.cancel=function(){this.invite&&(this.client.send("invite_manager","cancel",this.invite.target,this.invite),this.invite=null)},b.prototype.removeInvite=function(a){console.log("invite_manger;","removeInvite",a),this.invites[a]&&(this.emit("remove_invite",this.invites[a]),delete this.invites[a])},b}),define("modules/user_list",["EE"],function(a){function b(a,b){if(!a||!a.userId||!a.userName)throw new Error("wrong user data!");this.userId=a.userId,this.userName=a.userName,this.isPlayer=b||!1}var c=function(a){var b=this;this.client=a,this.users=[],this.rooms=[],a.on("login",function(a){b.onUserLogin(a,!0)})};return c.prototype=new a,c.prototype.onMessage=function(a){switch(a.type){case"user_login":this.onUserLogin(a.data)}},c.prototype.onUserLogin=function(a,c){var d=new b(a,c);c&&(this.player=d);for(var e=0;e<this.users.length;e++)if(this.users[e].userId==d.userId)return console.warn("user_list;","user already in list!",d),!1;this.users.push(d),this.emit("new_user",d)},c.prototype.onUserLeave=function(a){for(var b=0;b<this.users.length;b++)if(this.users[b].userId==a){var c=this.users[b];return this.users.splice(b,1),void this.emit("leave_user",c)}console.warn("user_list;","no user in list",a)},c.prototype.onGameStart=function(a,b){for(var c=0;c<b.length;c++)b[c]=this.getUser(b[c]),b[c].isInRoom=!0;var d={room:a,players:b};this.rooms.push(d),this.emit("new_room",d)},c.prototype.onGameEnd=function(a,b){for(var c=0;c<this.rooms.length;c++)if(this.rooms[c].room==a){var d=this.rooms[c];this.rooms.splice(c,1);for(var e=0;e<d.players.length;e++)d.players[e].isInRoom=!1;return void this.emit("close_room",d)}console.warn("user_list;","no room in list",a,b)},c.prototype.getUser=function(a){for(var b=0;b<this.users.length;b++)if(this.users[b].userId==a)return this.users[b];return null},c.prototype.getUsers=function(){var a=this.client.inviteManager.invite;return a?_.map(this.users,function(b){return b.userId===a.target&&(b.isInvited=!0),b}):this.users},c.prototype.getUserList=function(){for(var a,b=[],c=this.client.inviteManager.invite,d=0;d<this.users.length;d++)a=this.users[d],c&&a.userId==c.target?a.isInvited=!0:delete a.isInvited,a.isInRoom||b.push(a);return b},c.prototype.getRoomList=function(){return this.rooms},c}),define("modules/socket",["EE"],function(a){var b=function(a){a=a||{},this.port=a.port||"8080",this.domain=a.domain||"localhost",this.game=a.game||"test",this.url=a.url||this.game,this.isConnecting=!0,this.isConnected=!1};return b.prototype=new a,b.prototype.init=function(){var a=this;try{this.ws=new WebSocket("ws://"+this.domain+":"+this.port+"/"+this.url),this.ws.onclose=function(b,c){console.log("socket;","ws closed",b,c),a.isConnected&&a.onDisconnect()},this.ws.onerror=function(b){a.onError(b)},this.ws.onmessage=function(b,c){console.log("socket;","ws message",b,c);try{b=JSON.parse(b.data)}catch(d){return void console.log("socket;","ws wrong data in message",d)}a.onMessage(b)},this.ws.onopen=function(){console.log("socket;",new Date,"ws open"),a.onConnect()}}catch(b){console.log("socket;","ws open error"),this.onError(b)}},b.prototype.onError=function(a){console.log("socket;","ws error",a),this.isConnecting&&(this.isConnecting=!1,console.log("socket;","ws connection failed!"),this.onConnectionFailed())},b.prototype.onConnect=function(){this.isConnected=!0,this.emit("connection")},b.prototype.onDisconnect=function(){this.isConnected=!1,this.emit("disconnection")},b.prototype.onMessage=function(a){this.emit("message",a)},b.prototype.onConnectionFailed=function(){this.isConnecting=!1,this.isConnected=!1,this.emit("failed")},b.prototype.send=function(a){try{a=JSON.stringify(a)}catch(b){return void console.warn("socket;","json stringify err",a,b)}this.ws.send(a)},b}),define("text!tpls/userListFree.ejs",[],function(){return'<% _.each(users, function(user) { %>\r\n<tr>\r\n    <td class="userName"><%= user.userName %></td>\r\n    <% if (user.isPlayer) { %>\r\n    <td></td>\r\n    <% } else if (user.isInvited) { %>\r\n    <td class="inviteBtn activeInviteBtn" data-userId="<%= user.userId %>">Отмена</td>\r\n    <% } else { %>\r\n    <td class="inviteBtn" data-userId="<%= user.userId %>">Пригласить</td>\r\n    <% } %>\r\n\r\n</tr>\r\n\r\n<% }) %>'}),define("text!tpls/userListInGame.ejs",[],function(){return'<% _.each(rooms, function(room) { %>\r\n<tr>\r\n    <td class="userName"><%= room.players[0].userName %></td>\r\n    <td class="userName"><%= room.players[1].userName %></td>\r\n</tr>\r\n<% }) %>'}),define("text!tpls/userListMain.ejs",[],function(){return'<div class="tabs">\r\n    <div data-type="free">Свободны <span></span></div>\r\n    <div data-type="inGame">Играют <span></span></div>\r\n</div>\r\n<div id="userListSearch">\r\n    <label for="userListSearch">Поиск по списку:</label><input type="text" id="userListSearch"/>\r\n</div>\r\n<div class="tableWrap">\r\n    <table class="playerList"></table>\r\n</div>\r\n\r\n<div class="btn">\r\n    <span>Играть с любым</span>\r\n</div>'}),define("views/user_list",["underscore","backbone","jquery","text!tpls/userListFree.ejs","text!tpls/userListInGame.ejs","text!tpls/userListMain.ejs"],function(a,b,c,d,e,f){var g=b.View.extend({tagName:"div",id:"userList",tplFree:a.template(d),tplInGame:a.template(e),tplMain:a.template(f),events:{"click .inviteBtn":"invitePlayer","click .tabs div":"clickTab"},clickTab:function(a){var b=c(a.currentTarget),d=b.attr("data-type");d!==this.currentActiveTabName&&(this.currentActiveTabName=d,this._setActiveTab(this.currentActiveTabName),this._showPlayerListByTabName(this.currentActiveTabName))},invitePlayer:function(a){var b=c(a.currentTarget),d=b.attr("data-userId");b.hasClass(this.ACTIVE_INVITE_CLASS)?(this.client.inviteManager.cancel(),b.removeClass(this.ACTIVE_INVITE_CLASS),b.html("Пригласить")):(this.$el.find("."+this.ACTIVE_INVITE_CLASS).html("Пригласить").removeClass(this.ACTIVE_INVITE_CLASS),this.client.inviteManager.sendInvite(d,{}),b.addClass(this.ACTIVE_INVITE_CLASS),b.html("Отмена")),console.log("invite user",d)},initialize:function(a){this.client=a,this.$el.html(this.tplMain()),c("body").append(this.el),this.ACTIVE_INVITE_CLASS="activeInviteBtn",this.ACTIVE_TAB_CLASS="activeTab",this.$list=this.$el.find(".tableWrap table"),this.$counterFree=this.$el.find('.tabs div[data-type="free"]').find("span"),this.$counterinGame=this.$el.find('.tabs div[data-type="inGame"]').find("span"),this.listenTo(this.client.userList,"new_user",this.render.bind(this)),this.listenTo(this.client.userList,"leave_user",this.render.bind(this)),this.listenTo(this.client.inviteManager,"reject_invite",this.onRejectInvite.bind(this)),this.listenTo(this.client.userList,"new_room",this.render.bind(this)),this.listenTo(this.client.userList,"close_room",this.render.bind(this)),this.currentActiveTabName="free",this._setActiveTab(this.currentActiveTabName)},_setActiveTab:function(a){this.$el.find(".tabs div").removeClass(this.ACTIVE_TAB_CLASS),this.$el.find('.tabs div[data-type="'+a+'"]').addClass(this.ACTIVE_TAB_CLASS)},_setCounters:function(){this.$counterFree.html("("+this.client.userList.getUserList().length+")"),this.$counterinGame.html("("+2*this.client.userList.getRoomList().length+")")},_showPlayerListByTabName:function(a){void 0===a&&(a=this.currentActiveTabName),"free"===a?this.$list.html(this.tplFree({users:this.client.userList.getUserList()})):"inGame"===a?this.$list.html(this.tplInGame({rooms:this.client.userList.getRoomList()})):console.warn("unknown tab",a)},onRejectInvite:function(a){this.$el.find("."+this.ACTIVE_INVITE_CLASS+'[data-userId="'+a.user.userId+'"]').html("Пригласить").removeClass(this.ACTIVE_INVITE_CLASS)},render:function(){return this._showPlayerListByTabName(),this._setCounters(),this}});return g}),define("views/dialogs",["jquery","jquery-ui"],function(a){var b=function(){function b(a){j=a,j.inviteManager.on("new_invite",c),j.inviteManager.on("reject_invite",d),j.inviteManager.on("cancel_invite",e),j.inviteManager.on("remove_invite",f),j.gameManager.on("user_leave",g),j.gameManager.on("game_start",i),j.gameManager.on("round_end",h),j.gameManager.on("game_leave",i)}function c(b){var c=a("<div>");c.addClass(l),c.attr("data-userId",b.from.userId),c.html("Вас пригласил в игру пользователь "+b.from.userName).dialog({resizable:!0,draggable:!1,modal:!1,buttons:{"Принять":function(){j.inviteManager.accept(a(this).attr("data-userId")),a(this).remove()},"Отклонить":function(){j.inviteManager.reject(a(this).attr("data-userId")),a(this).remove()}},close:function(){j.inviteManager.reject(a(this).attr("data-userId")),a(this).remove()}}).parent().draggable()}function d(b){var c=a("<div>");c.addClass(l),c.addClass(k),c.html("Пользователь "+b.user.userName+" отклонил ваше приглашение").dialog({resizable:!1,modal:!1,buttons:{"Ок":function(){a(this).remove()}}})}function e(a){console.log("cancel invite",a)}function f(b){var c=b.from;console.log("remove invite",c),a("."+l+'[data-userId="'+c+'"]').remove()}function g(b){i();var c=a("<div>");c.addClass(l),c.addClass(k),c.html("Пользователь "+b.userName+" покинул игру").dialog({resizable:!1,modal:!1,buttons:{"Ок":function(){a(this).remove(),j.gameManager.leaveRoom()}}})}function h(b){var c=a("<div>");c.addClass(m);var d="";switch(b.result){case"win":d="Победа";break;case"lose":d="Поражение";break;case"draw":d="Ничья";break;default:d="игра окночена"}c.html(d+"<br><br> Сыграть с соперником еще раз?").dialog({resizable:!1,modal:!1,width:350,buttons:{"Да, начать новую игру":function(){a(this).remove(),j.gameManager.sendReady()},"Нет, выйти":function(){a(this).remove(),j.gameManager.leaveGame()}}})}function i(){a("."+k).remove(),a("."+m).remove()}var j,k="dialogNotification",l="dialogInvite",m="dialogRoundResult";return{init:b}}();return b}),define("modules/views_manager",["views/user_list","views/dialogs"],function(a,b){var c=function(a){this.client=a,this.userListView=null,this.dialogsView=b};return c.prototype.init=function(){this.userListView=new a(this.client),this.dialogsView.init(this.client)},c}),define("client",["modules/game_manager","modules/invite_manager","modules/user_list","modules/socket","modules/views_manager","EE"],function(a,b,c,d,e,f){var g=function(f){var g=this;this.userList=new c(this),this.gameManager=new a(this),this.inviteManager=new b(this),this.viewsManager=new e(this),this.socket=new d(f),this.socket.on("connection",function(){console.log("client;","socket connected")}),this.socket.on("disconnection",function(){console.log("client;","socket disconnected")}),this.socket.on("failed",function(){console.log("client;","socket connection failed")}),this.socket.on("message",function(a){console.log("client;","socket message",a),g.onMessage(a)}),this.getUser=this.userList.getUser.bind(this.userList)};return g.prototype=new f,g.prototype.init=function(){return this.socket.init(),this.viewsManager.init(),this},g.prototype.onMessage=function(a){switch(a.module){case"server":this.onServerMessage(a);break;case"invite_manager":this.inviteManager.onMessage(a);break;case"game_manager":this.gameManager.onMessage(a)}},g.prototype.onServerMessage=function(a){switch(a.type){case"login":this.onLogin(a.data.you,a.data.userlist,a.data.rooms);break;case"user_login":this.userList.onUserLogin(a.data);break;case"user_leave":this.userList.onUserLeave(a.data);break;case"new_game":this.userList.onGameStart(a.data.room,a.data.players),this.gameManager.onMessage(a);break;case"end_game":this.userList.onGameEnd(a.data.room,a.data.players)}},g.prototype.onLogin=function(a,b,c){console.log("client;","login",a,b,c),this.emit("login",a);var d;for(d=0;d<b.length;d++)this.userList.onUserLogin(b[d]);for(d=0;d<c.length;d++)this.userList.onGameStart(c[d].room,c[d].players)},g.prototype.send=function(a,b,c,d){return"object"==typeof a&&a.module&&a.type&&a.data&&(b=a.type,d=a.data,c=a.target,a=a.module),a&&b&&d&&c?("server"!=c&&(this.userList.getUser(c)||console.warn("client;","send message to offline user!",c)),void this.socket.send({module:a,type:b,target:c,data:d})):void console.warn("client;","some arguments undefined!",a,b,c,d)},g.prototype.getPlayer=function(){return this.userList.player},g}),define("v6-game-client",["client"],function(a){return console.log("main;",new Date,"ready"),a});